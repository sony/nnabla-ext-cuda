#!/bin/sh
# Copyright 2021,2022 Sony Group Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

NV_DRIVER_VERS=$(sed -n 's/^NVRM.*Kernel Module *\([0-9.]*\).*$/\1/p' /proc/driver/nvidia/version 2>/dev/null)

export _CUDA_COMPAT_PATH=${_CUDA_COMPAT_PATH:-/usr/local/cuda/compat}

# Set paths to use
_CUDA_COMPAT_REALLIB="${_CUDA_COMPAT_PATH}"
_CUDA_COMPAT_SYMLINK="${_CUDA_COMPAT_PATH}/lib"

# If the CUDA driver was detected and the compat check hasn't been flagged as done yet, proceed
if [ -n "${NV_DRIVER_VERS}" -a -e /dev/nvidiactl ]; then

  # Remove symlink that might have been left behind by a previous 'docker commit';
  # it will be recreated below if the compat check passes
  rm -f "${_CUDA_COMPAT_SYMLINK}/*"

  # Run cudaCheck with the compat library on LD_LIBRARY_PATH to see if it will initialize
  LD_LIBRARY_PATH=${_CUDA_COMPAT_REALLIB} /usr/local/bin/cudalibcheck 2> /dev/null
  CUDA_COMPAT_CHECK_PASS=$?

  # If compat check passed, bring the compat lib into the path (several ways for safety)
  if [ ${CUDA_COMPAT_CHECK_PASS} = 0 ]; then
    # symlink the compat lib into a location that was preset to be on LD_LIBRARY_PATH via ENV
    curdir=$PWD
    ( cd ${_CUDA_COMPAT_SYMLINK}; \
        for f in ../*.so*; do \
	  ln -sf $f . 2>/dev/null; \
        done; \
      cd $curdir )
    unset curdir
    # Additionally prepend _CUDA_COMPAT_REALLIB onto LD_LIBRARY_PATH in case _CUDA_COMPAT_PATH was not writable
    export LD_LIBRARY_PATH="${_CUDA_COMPAT_REALLIB}${LD_LIBRARY_PATH:+":${LD_LIBRARY_PATH}"}"
    echo "NOTE: compatibility driver is enabled because system has ${NV_DRIVER_VERS}"
  fi
else
  echo "Failed to detect NVIDIA environment."
fi

#if the mofed KMD < 4.9 and if OMPI_MCA_pml is not set then just set it to disable UCX
DETECTED_MOFED=$(cat /sys/module/mlx5_core/version 2>/dev/null || true)
if dpkg --compare-versions "${DETECTED_MOFED:-0}" lt 4.9; then export OMPI_MCA_pml=${OMPI_MCA_pml:-^ucx}; fi

# Clean up
unset _CUDA_COMPAT_REALLIB
unset _CUDA_COMPAT_SYMLINK
